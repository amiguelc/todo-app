html, body {
    height: 100%;
}
body {
    font-family: Arial, Helvetica, sans-serif;
    display: flex;
    flex-direction: column;
}
.content {
    flex: 1 0 auto;
}
.content-dash {
    flex: 1 0 auto;
    width:100%;
}
.footer {
    flex-shrink: 0;
}
.topnav {
    /* overflow: hidden; */ 
    background-color: #f8f9fa;
}

.topnav a {
    float: left;
    display: block;
    color: rgba(0,0,0,.7);
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 17px;
}

.topnav a:hover {
    /*background-color: midgray;*/
    color: black;
}

.active {
    background-color: lightgray;
    color: black !important;
}

.topnav .icon {
    display: none;
}

/* Media Queries*/
/* Extra small devices (phones, 600px and down) 
@media only screen and (max-width: 600px) {...}

Small devices (portrait tablets and large phones, 600px and up) 
@media only screen and (min-width: 600px) {...}

 Medium devices (landscape tablets, 768px and up) 
@media only screen and (min-width: 768px) {...}

Large devices (laptops/desktops, 992px and up) 
@media only screen and (min-width: 992px) {...}

/* Extra large devices (large laptops and desktops, 1200px and up)
@media only screen and (min-width: 1200px) {...} */


/* Extra small devices (phones, 600px and down) */
@media screen and (max-width: 600px) {
    .content{ width: 100%; }
    .topnav { background-color: lightgray; }
    .topnav a:not(:first-child) {display: none;}        
    .topnav a.icon {
        float: right;
        display: block;
    }
    .topnav.responsive {position: relative; background-color: #f8f9fa !important;}
    .topnav.responsive .icon {
        position: absolute;
        right: 0;
        top: 0;
    }
    .topnav.responsive a {
        float: none !important;
        display: block;
        text-align: left;
    }
    .modal-container { width:95%; }
}
@media only screen and (min-width: 600px) {
    .content {
        width:100%;
        margin-right:auto;
        margin-left:auto; 
    }
    .modal-container { width:90%;}
}
@media only screen and (min-width: 768px) {
    .content {
        width:768px;
        margin-right:auto;
        margin-left:auto; 
    }
    .modal-container { width:85%; }
}
@media only screen and (min-width: 992px) {
    .content {
        width:800px;
        margin-right:auto;
        margin-left:auto; 
    }
    .modal-container { width:75%;}
}
@media only screen and (min-width: 1200px) {
    .content {
        width:1024px;
        margin-right:auto;
        margin-left:auto; 
    }
    .modal-container { width:65%;}
}
@media only screen and (min-width: 1600px) {
    .content {
        width:1256px;
        margin-right:auto;
        margin-left:auto; 
    }
    .modal-container { width:60%;}
}


.footer {
    background: lightgray;
    text-align:center;
    font-size:12pt;
    position:relative;
    bottom:0;
    width:100%;


}

/* VueJS Modal */

.modal-mask {
    position: fixed;
    z-index: 9998;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, .5);
    display: table;
    transition: opacity .3s ease;
  }
  
  .modal-wrapper {
    display: table-cell;
    vertical-align: middle;
  }
  
  .modal-container {
    /*width: 300px; */
    margin: 0px auto;
    padding: 20px 30px;
    background-color: #fff;
    border-radius: 2px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, .33);
    transition: all .3s ease;
    font-family: Helvetica, Arial, sans-serif;
  }
  
  .modal-header h3 {
    margin-top: 0;
    /* color: #42b983; */
  }
  
  .modal-body {
    margin: 20px 0;
  }
  
  .modal-default-button {
    float: right;
  }
  
  /*
   * The following styles are auto-applied to elements with
   * transition="modal" when their visibility is toggled
   * by Vue.js.
   *
   * You can easily play with the modal transition by editing
   * these styles.
   */
  
  .modal-enter {
    opacity: 0;
  }
  
  .modal-leave-active {
    opacity: 0;
  }
  
  .modal-enter .modal-container,
  .modal-leave-active .modal-container {
    -webkit-transform: scale(1.1);
    transform: scale(1.1);
  }
  
  